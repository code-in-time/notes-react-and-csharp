// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoteKeeper;

namespace NoteKeeper.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NoteKeeper.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new { EmployeeId = 1L, DateOfBirth = new DateTime(1979, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "uncle.bob@gmail.com", FirstName = "Uncle", LastName = "Bob", PhoneNumber = "999-888-7777" },
                        new { EmployeeId = 2L, DateOfBirth = new DateTime(1981, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), Email = "jan.kirsten@gmail.com", FirstName = "Jan", LastName = "Kirsten", PhoneNumber = "111-222-3333" }
                    );
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("No");

                    b.Property<string>("Place");

                    b.Property<string>("Road");

                    b.Property<string>("Street");

                    b.HasKey("id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("CellNumber");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("id");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Archived");

                    b.Property<string>("Date");

                    b.Property<bool>("Private");

                    b.Property<int?>("Profileid");

                    b.Property<string>("Subject");

                    b.Property<string>("Text");

                    b.HasKey("id");

                    b.HasIndex("Profileid");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Profile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Addressid");

                    b.Property<int?>("Detailsid");

                    b.HasKey("id");

                    b.HasIndex("Addressid");

                    b.HasIndex("Detailsid");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Note", b =>
                {
                    b.HasOne("NoteKeeper.Models.Profile.Profile")
                        .WithMany("Notes")
                        .HasForeignKey("Profileid");
                });

            modelBuilder.Entity("NoteKeeper.Models.Profile.Profile", b =>
                {
                    b.HasOne("NoteKeeper.Models.Profile.Address", "Address")
                        .WithMany()
                        .HasForeignKey("Addressid");

                    b.HasOne("NoteKeeper.Models.Profile.Details", "Details")
                        .WithMany()
                        .HasForeignKey("Detailsid");
                });
#pragma warning restore 612, 618
        }
    }
}
